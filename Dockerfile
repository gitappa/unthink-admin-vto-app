# Use Node.js 20 Alpine as base image for both build and runtime
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies needed for build)
RUN npm ci

# Copy source code
COPY . .

# Build the application with environment variables
ARG VITE_FIREBASE_API_KEY
ARG VITE_FIREBASE_AUTH_DOMAIN
ARG VITE_FIREBASE_PROJECT_ID
ARG VITE_FIREBASE_STORAGE_BUCKET
ARG VITE_FIREBASE_MESSAGING_SENDER_ID
ARG VITE_FIREBASE_APP_ID
ARG VITE_OPERATOR_ID
ARG VITE_OPERATOR_KEY
ARG VITE_SOURCE_TOPIC_ID
ARG VITE_TARGET_TOPIC_ID


ENV VITE_FIREBASE_API_KEY=$VITE_FIREBASE_API_KEY
ENV VITE_FIREBASE_AUTH_DOMAIN=$VITE_FIREBASE_AUTH_DOMAIN
ENV VITE_FIREBASE_PROJECT_ID=$VITE_FIREBASE_PROJECT_ID
ENV VITE_FIREBASE_STORAGE_BUCKET=$VITE_FIREBASE_STORAGE_BUCKET
ENV VITE_FIREBASE_MESSAGING_SENDER_ID=$VITE_FIREBASE_MESSAGING_SENDER_ID
ENV VITE_FIREBASE_APP_ID=$VITE_FIREBASE_APP_ID
ENV VITE_OPERATOR_ID=$VITE_OPERATOR_ID
ENV VITE_OPERATOR_KEY=$VITE_OPERATOR_KEY
ENV VITE_SOURCE_TOPIC_ID=$VITE_SOURCE_TOPIC_ID
ENV VITE_TARGET_TOPIC_ID=$VITE_TARGET_TOPIC_ID

# Build the frontend
RUN npm run build

# Remove dev dependencies to reduce image size
RUN npm prune --production

# Create production environment file
RUN echo "NODE_ENV=production" > .env.production

# Expose port 8080 (Cloud Run default)
EXPOSE 8080

# Start the combined server
CMD ["npm", "start"]
